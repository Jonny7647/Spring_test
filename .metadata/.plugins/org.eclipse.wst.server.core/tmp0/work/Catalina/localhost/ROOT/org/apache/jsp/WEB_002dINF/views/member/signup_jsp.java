/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.59
 * Generated at: 2022-04-01 08:05:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class signup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("	<meta charset=\"UTF-8\">\r\n");
      out.write("	<title>회원가입</title>\r\n");
      out.write("	<link href=\"/resources/css/style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("	<!--  jquery,ajax 사용하기위해 라이브러리 CDN 추가  -->\r\n");
      out.write("	<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<br />\r\n");
      out.write("	<h1 align=\"center\"> 회원 가입 </h1>\r\n");
      out.write("	<form action=\"/member/signup\" method=\"POST\" name=\"inputForm\" onsubmit=\"return check()\">\r\n");
      out.write("		<table>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>아이디*</td>\r\n");
      out.write("				<td><input type=\"text\" name=\"id\" id=\"id\" /></td>\r\n");
      out.write("			</tr>		\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>아이디 사용가능 여부</td>\r\n");
      out.write("				<td><input type=\"text\" id=\"idCheckResult\" disabled /></td>\r\n");
      out.write("			</tr>		\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>아이디 사용여부 확인 버튼</td>\r\n");
      out.write("				<td><input type=\"button\" value=\"아이디 중복 확인\" onclick=\"openIdAvail(this.form)\" /></td>\r\n");
      out.write("			</tr>		\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>비밀번호*</td>\r\n");
      out.write("				<td><input type=\"password\" name=\"pw\" /></td>\r\n");
      out.write("			</tr>		\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>비밀번호 확인*</td>\r\n");
      out.write("				<td><input type=\"password\" name=\"pwch\" /></td>\r\n");
      out.write("			</tr>		\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>이름*</td>\r\n");
      out.write("				<td><input type=\"text\" name=\"name\" /></td>\r\n");
      out.write("			</tr>		\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>email</td>\r\n");
      out.write("				<td><input type=\"text\" name=\"email\" /></td>\r\n");
      out.write("			</tr>		\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>성별</td>\r\n");
      out.write("				<td>\r\n");
      out.write("					<input type=\"radio\" name=\"gender\" value=\"male\" checked /> 남\r\n");
      out.write("					<input type=\"radio\" name=\"gender\" value=\"female\" /> 여\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>		\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td>연령대</td>\r\n");
      out.write("				<td><input type=\"text\" name=\"age\" /></td>\r\n");
      out.write("			</tr>		\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"2\">\r\n");
      out.write("					<input type=\"submit\" value=\"가입\" />\r\n");
      out.write("					<input type=\"reset\" value=\"reset\" />\r\n");
      out.write("					<input type=\"button\" value=\"취소\"  onclick=\"window.location='/member/main'\" />\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>		\r\n");
      out.write("		</table>\r\n");
      out.write("	</form>\r\n");
      out.write("	\r\n");
      out.write("	<script type=\"text/javascript\">\r\n");
      out.write("		// jquery \r\n");
      out.write("		$(document).ready(function(){\r\n");
      out.write("			// id속성값이 'id'인 태그에 변화가 있을때 함수 실행해라\r\n");
      out.write("			$(\"#id\").change(function(){ \r\n");
      out.write("				let idVal = $(\"#id\").val(); \r\n");
      out.write("				//console.log(idVal);\r\n");
      out.write("				// ajax로 id 체크 요청하고, 결과 받아서 화면에 결과 뿌리기 \r\n");
      out.write("				$.ajax({\r\n");
      out.write("					type : \"post\",\r\n");
      out.write("					url : \"/member/ajaxIdAvail\",\r\n");
      out.write("					data :{id : idVal}, \r\n");
      out.write("					success : function(result){\r\n");
      out.write("						console.log(\"요청 성공!!\"); \r\n");
      out.write("						console.log(\"result : \" + result); \r\n");
      out.write("						// 아이디사용가능여부 결과 input태그에 value값을 \r\n");
      out.write("						// 서버에서 돌려받은 문자열로 지정 \r\n");
      out.write("						$(\"#idCheckResult\").val(result); \r\n");
      out.write("					},\r\n");
      out.write("					error : function(e){\r\n");
      out.write("						console.log(\"에러 발생!!\"); \r\n");
      out.write("						console.log(e);\r\n");
      out.write("					}\r\n");
      out.write("				});// ajax\r\n");
      out.write("			});// change\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("		});// ready\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("		// 유효성 검사 \r\n");
      out.write("		function check() {\r\n");
      out.write("			let inputs = document.inputForm; \r\n");
      out.write("			//console.log(inputs);\r\n");
      out.write("			if(!inputs.id.value){\r\n");
      out.write("				alert(\"아이디를 입력하세요\");\r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("			if(!inputs.pw.value){\r\n");
      out.write("				alert(\"비밀번호를 입력하세요\"); \r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("			if(!inputs.pwch.value){\r\n");
      out.write("				alert(\"비밀번호 확인란을 입력하세요\"); \r\n");
      out.write("				return false;\r\n");
      out.write("			}\r\n");
      out.write("			if(!inputs.name.value){\r\n");
      out.write("				alert(\"이름을 입력하세요\"); \r\n");
      out.write("				return false;			 			\r\n");
      out.write("			}\r\n");
      out.write("			if(inputs.pw.value != inputs.pwch.value){\r\n");
      out.write("				alert(\"비밀번호와 확인란을 동일하게 입력하세요.\"); \r\n");
      out.write("				return false\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write(" 		// 아이디 중복확인 팝업 \r\n");
      out.write(" 		function openIdAvail(inputForm) { // <-- this.form 받아주기 \r\n");
      out.write("			if(inputForm.id.value == \"\" || !inputForm.id.value){\r\n");
      out.write("				alert(\"아이디를 입력하세요\"); \r\n");
      out.write("				return;  // 함수 강제 종료\r\n");
      out.write("			}\r\n");
      out.write(" 			// 팝업으로 띄울 요청 경로 만들기 \r\n");
      out.write(" 			let url = \"/member/idAvail?id=\" + inputForm.id.value; \r\n");
      out.write(" 			// 팝업 띄우기 \r\n");
      out.write(" 			open(url, \"idAvail\", \"toolbar=no, location=no, status=no, menubar=no, resizable=no, width=300, height=200\"); \r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
